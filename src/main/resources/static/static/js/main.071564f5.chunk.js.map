{"version":3,"sources":["assets/logo.svg","components/layout/Navbar.js","components/pages/NotFound.js","components/pages/About.js","components/pages/Home.js","components/repayments/CustomerSelect.js","context/season/seasonContext.js","context/repayment/repaymentContext.js","components/repayments/RepaymentUploadForm.js","components/repayments/RepaymentUploadList.js","components/repayments/SummaryModal.js","components/repayments/RepaymentsList.js","components/statistics/Statistics.js","components/pages/Dashboard.js","context/season/seasonReducer.js","context/types.js","context/season/SeasonState.js","context/customer/customerContext.js","context/customer/customerReducer.js","context/customer/CustomerState.js","context/repayment/repaymentReducer.js","context/repayment/RepaymentState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","className","to","src","logo","alt","NotFound","status","title","subTitle","extra","type","About","Home","href","Option","CustomerSelect","props","useState","data","setData","fetching","setFetching","fetchUser","value","a","axios","get","response","map","customer","text","customerName","customerId","showSearch","showArrow","filterOption","placeholder","onSearch","debounce","onSelect","key","form","setFieldsValue","notFoundContent","size","d","seasonContext","createContext","repaymentContext","RepaymentUploadForm","useContext","SeasonContext","RepaymentContext","seasons","getSeasons","getSummariesToModify","loading","clearPanel","useEffect","useForm","labelCol","xs","span","sm","wrapperCol","name","onFinish","values","seasonId","amount","resetFields","initialValues","Item","label","rules","required","message","min","season","seasonName","htmlType","style","marginLeft","onClick","RepaymentUploadList","repaymentUploads","repayDebts","dataSource","length","upload","index","fontSize","columns","dataIndex","SummaryModal","summariesToModify","clearProposedChanges","addToUploads","summariesToUpdate","t","summary","id","credit","totalCredit","repaid","totalRepaid","toAdd","amountToAdd","centered","visible","onOk","repaymentUpload","onCancel","okText","RepaymentsList","currentlyMadeRepayments","adjustmentRepayments","originalRepayment","repaymentId","children","repayment","marginTop","orientation","Statistics","gutter","valueStyle","color","Sider","Content","Dashboard","collapsible","breakpoint","theme","mode","defaultSelectedKeys","DashboardOutlined","CloudUploadOutlined","TeamOutlined","HourglassOutlined","state","action","payload","error","SeasonState","useReducer","seasonReducer","dispatch","res","msg","Provider","customerContext","fetchedCustomers","customers","CustomerState","customerReducer","getAllCustomers","setLoading","findCustomer","allRepayments","RepaymentState","repaymentReducer","totalRepaymentUploads","getAllRepayments","uploads","config","headers","post","getTotalRepaymentUploads","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.071564f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b1ce103d.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\">\r\n          <img src={logo} alt=\"One Acre Fund Logo\" />\r\n        </Link>\r\n      </div>\r\n      <ul className=\"nav-links\">\r\n        <li>\r\n          <Link to=\"/dashboard\">Dashboard</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Result, Button } from 'antd'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n    extra={<Button type=\"primary\"><Link to=\"/\">Back Home</Link></Button>}\r\n  />\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      <h1>About this App</h1>\r\n      <p>App to make loan repayments</p>\r\n      <p>Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className=\"home\">\r\n      <div className=\"home__textbox\">\r\n        <h1 className=\"home__heading\">\r\n          <span className=\"home__heading--main\">the portal</span>\r\n          <span className=\"home__heading--sub\">for all repayments</span>\r\n        </h1>\r\n        <Link to=\"/dashboard\">\r\n          <button className=\"home__btn btn btn--white\" href=\"#\">\r\n            get started\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      }\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Select, Spin } from \"antd\";\r\nimport axios from 'axios'\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst CustomerSelect = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  const selectValue = (key, value) => {\r\n    props.form.setFieldsValue({\r\n      customerId: value.value,\r\n    });\r\n  };\r\n\r\n  const fetchUser = async (value) => {\r\n    setFetching(true);\r\n    const response = await axios.get(`/api/v1/customers/filter?value=${value}`);\r\n    const data = response.data.data.map(customer => ({\r\n      text: customer.customerName,\r\n      value: customer.customerId\r\n    }))\r\n    setData(data);\r\n    setFetching(false);\r\n\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      showSearch\r\n      showArrow={false}\r\n      filterOption={false}\r\n      placeholder=\"Select Customer\"\r\n      onSearch={debounce(fetchUser, 800)}\r\n      onSelect={selectValue}\r\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n    >\r\n      {data.map((d) => (\r\n        <Option key={d.value}>{d.text}</Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CustomerSelect;\r\n","import { createContext } from \"react\";\r\n\r\nconst seasonContext = createContext();\r\n\r\nexport default seasonContext;\r\n","import { createContext } from 'react';\r\n\r\nconst repaymentContext = createContext();\r\n\r\nexport default repaymentContext;","import React, { useContext, useEffect } from \"react\";\r\nimport { Form, InputNumber, Button, Select } from \"antd\";\r\nimport CustomerSelect from \"./CustomerSelect\";\r\nimport SeasonContext from \"../../context/season/seasonContext\";\r\nimport RepaymentContext from \"../../context/repayment/repaymentContext\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst RepaymentUploadForm = () => {\r\n  const seasonContext = useContext(SeasonContext);\r\n  const repaymentContext = useContext(RepaymentContext);\r\n\r\n  const { seasons, getSeasons } = seasonContext;\r\n  const { getSummariesToModify, loading, clearPanel } = repaymentContext;\r\n\r\n  useEffect(() => {\r\n    getSeasons();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    clearPanel()\r\n    getSummariesToModify(values.customerId, values.seasonId, values.amount);\r\n    form.resetFields();\r\n  };\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"repayment-upload-form\"\r\n      className=\"ant-advanced-search-form\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        seasonId: \"0\",\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"amount\"\r\n        label=\"Amount\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please enter amount\",\r\n          },\r\n          {\r\n            type: \"number\",\r\n            min: 1,\r\n            message: \"Amount should be greater than zero\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber className=\"amount\" placeholder=\"Enter amount\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"customerId\"\r\n        label=\"Customer\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please select customer\",\r\n          },\r\n        ]}\r\n      >\r\n        <CustomerSelect form={form} />\r\n      </Form.Item>\r\n      <Form.Item name=\"seasonId\" label=\"Season\">\r\n        <Select>\r\n          <Option key=\"0\" value=\"0\">Select Season</Option>\r\n          {seasons !== null &&\r\n            seasons.map((season) => (\r\n              <Option key={season.seasonId} value={season.seasonId}>{season.seasonName}</Option>\r\n            ))}\r\n          ) }\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <div className=\"repay-cta\">\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Check\r\n        </Button>\r\n        <Button\r\n          style={{ marginLeft: \"8px\" }}\r\n          onClick={() => {\r\n            form.resetFields();\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RepaymentUploadForm;\r\n","import React, { useContext } from \"react\";\r\nimport RepaymentContext from \"../../context/repayment/repaymentContext\";\r\nimport { Button, Table } from \"antd\";\r\n\r\nconst RepaymentUploadList = () => {\r\n  const repaymentContext = useContext(RepaymentContext);\r\n  const { repaymentUploads, repayDebts } = repaymentContext;\r\n  let dataSource = [];\r\n  const columns = [\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n    },\r\n    {\r\n      title: \"Customer ID\",\r\n      dataIndex: \"customerId\",\r\n      key: \"customerId\",\r\n    },\r\n    {\r\n      title: \"Season ID\",\r\n      dataIndex: \"seasonId\",\r\n      key: \"seasonId\",\r\n    },\r\n  ];\r\n\r\n  if (repaymentUploads.length > 0) {\r\n    dataSource = repaymentUploads.map((upload, index) => {\r\n      return {\r\n        key: index,\r\n        amount: upload.amount,\r\n        customerId: upload.customerId,\r\n        seasonId: upload.seasonId ? upload.seasonId : \"-\",\r\n      };\r\n    });\r\n  }\r\n\r\n  return (\r\n    repaymentUploads.length > 0 && (\r\n      <div>\r\n        <div className=\"table-header\">\r\n          <p style={{ fontSize: \"1rem\" }}>\r\n            List of Repayment Uploads to be made\r\n          </p>\r\n          <Button type=\"primary\" onClick={() => repayDebts(repaymentUploads)}>\r\n            Submit\r\n          </Button>\r\n        </div>\r\n        <Table dataSource={dataSource} columns={columns} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default RepaymentUploadList;\r\n","import React, { useContext } from \"react\";\r\nimport RepaymentContext from \"../../context/repayment/repaymentContext\";\r\nimport { Modal, Table } from \"antd\";\r\n\r\nconst SummaryModal = () => {\r\n  const repaymentContext = useContext(RepaymentContext);\r\n  const { summariesToModify, clearProposedChanges, addToUploads } = repaymentContext;\r\n\r\n  let dataSource = [];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Summary ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Season ID\",\r\n      dataIndex: \"seasonId\",\r\n      key: \"seasonId\",\r\n    },\r\n    {\r\n      title: \"Total Credit\",\r\n      dataIndex: \"credit\",\r\n      key: \"credit\",\r\n    },\r\n    {\r\n      title: \"Total Repaid\",\r\n      dataIndex: \"repaid\",\r\n      key: \"repaid\",\r\n    },\r\n    {\r\n      title: \"Amount To Add\",\r\n      dataIndex: \"toAdd\",\r\n      key: \"toAdd\",\r\n    },\r\n  ];\r\n\r\n  if (summariesToModify !== null) {\r\n    dataSource = summariesToModify.summariesToUpdate.map((t) => {\r\n      return {\r\n        key: t.summary.id,\r\n        id: t.summary.id,\r\n        seasonId: t.summary.seasonId,\r\n        credit: t.summary.totalCredit,\r\n        repaid: t.summary.totalRepaid,\r\n        toAdd: t.amountToAdd,\r\n      };\r\n    });\r\n  }\r\n\r\n  const addToRepaymentUploads = () => {\r\n    if (summariesToModify !== null) {\r\n      addToUploads(summariesToModify.repaymentUpload)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Proposed Changes\"\r\n      centered\r\n      visible={summariesToModify !== null}\r\n      onOk={() => addToRepaymentUploads()}\r\n      onCancel={() => clearProposedChanges()}\r\n      okText=\"Add\"\r\n    >\r\n      {summariesToModify !== null && (\r\n        <>\r\n          <div className=\"changes-header\">\r\n            <p><span className=\"label\">Total Amount:</span> {summariesToModify.repaymentUpload.amount}</p>\r\n            <p><span className=\"label\">Customer ID: </span>{summariesToModify.repaymentUpload.customerId}</p>\r\n            {summariesToModify.repaymentUpload.seasonId && <p><span className=\"label\">Season ID: </span>{summariesToModify.repaymentUpload.seasonId}</p>}\r\n          </div>\r\n          <div>\r\n            <p className=\"label\">Customer Summaries to Update: </p>\r\n            <Table dataSource={dataSource} columns={columns} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SummaryModal;\r\n","import React, { useContext } from 'react';\r\nimport { Table, Divider } from 'antd';\r\nimport RepaymentContext from '../../context/repayment/repaymentContext';\r\n\r\nconst RepaymentsList = () => {\r\n  const repaymentContext = useContext(RepaymentContext);\r\n  const { currentlyMadeRepayments } = repaymentContext;\r\n\r\n  let data = [];\r\n  const columns = [\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n    },\r\n    {\r\n      title: \"Customer ID\",\r\n      dataIndex: \"customerId\",\r\n      key: \"customerId\",\r\n    },\r\n    {\r\n      title: \"Season ID\",\r\n      dataIndex: \"seasonId\",\r\n      key: \"seasonId\",\r\n    },\r\n  ];\r\n\r\n  if (currentlyMadeRepayments !== null) {\r\n    data = currentlyMadeRepayments.map(data => {\r\n      const {adjustmentRepayments, originalRepayment } = data;\r\n      return {\r\n        key: originalRepayment.repaymentId,\r\n        amount: originalRepayment.amount,\r\n        customerId: originalRepayment.customerId,\r\n        seasonId: originalRepayment.seasonId,\r\n        children: adjustmentRepayments === null ? null : adjustmentRepayments.map(repayment => ({\r\n          key: repayment.repaymentId,\r\n        amount: repayment.amount,\r\n        customerId: repayment.customerId,\r\n        seasonId: repayment.seasonId\r\n        }))\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    currentlyMadeRepayments !== null && (<div style={{marginTop: '3rem'}}>\r\n      <Divider orientation=\"left\">List of Repayments made</Divider>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>)\r\n  )\r\n}\r\n\r\nexport default RepaymentsList\r\n","import React from \"react\";\r\nimport { Statistic, Card, Row, Col } from \"antd\";\r\n\r\nconst Statistics = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={16}>\r\n        <Col span={8}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Number of Customers\"\r\n              value={5000}\r\n              valueStyle={{ color: \"#3c917d\" }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Total Repayment Uploads\"\r\n              value={10000}\r\n              valueStyle={{ color: \"#3c917d\" }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Total Number of Repayments made\"\r\n              value={12500}\r\n              valueStyle={{ color: \"#3c917d\" }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  DashboardOutlined,\r\n  CloudUploadOutlined,\r\n  TeamOutlined,\r\n  HourglassOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RepaymentUploadForm from \"../repayments/RepaymentUploadForm\";\r\nimport RepaymentUploadList from '../repayments/RepaymentUploadList';\r\nimport ProposedChangesModal from '../repayments/SummaryModal';\r\nimport RepaymentsList from '../repayments/RepaymentsList';\r\n\r\nimport Statistics from \"../statistics/Statistics\";\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Layout>\r\n      <Sider className=\"sider\" collapsible breakpoint={\"md\"}>\r\n        <Menu\r\n          className=\"menu\"\r\n          theme=\"light\"\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={[\"Dashboard\"]}\r\n        >\r\n          <Menu.Item key=\"Dashboard\">\r\n            <DashboardOutlined />\r\n            <span>Dashboard</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"Requests\">\r\n            <CloudUploadOutlined />\r\n            <span>Repayments</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"Departments\">\r\n            <TeamOutlined />\r\n            <span>Customers</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"Settings\">\r\n            <HourglassOutlined />\r\n            <span>Seasons</span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Content className=\"content\">\r\n        <Statistics />\r\n\r\n        <div className=\"repayment-area\">\r\n          <h1>Repayments Panel</h1>\r\n          <div className=\"repayment-upload\">\r\n            <RepaymentUploadForm />\r\n            <RepaymentUploadList />\r\n          </div>\r\n          <RepaymentsList />\r\n        </div>\r\n        <ProposedChangesModal />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import {\r\n  SEASON_ERROR,\r\n  GET_SEASONS,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_SEASONS:\r\n      return {\r\n        ...state,\r\n        seasons: action.payload,\r\n      };\r\n\r\n    case SEASON_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_CUSTOMER_SUMMARY = \"GET_CUSTOMER_SUMMARY\";\r\nexport const FIND_CUSTOMER = \"FIND_CUSTOMER\";\r\nexport const GET_CUSTOMERS = \"GET_CUSTOMER\";\r\nexport const ADD_TO_UPLOADS = \"ADD_TO_UPLOADS\";\r\nexport const REPAY_DEBTS = \"REPAY_DEBTS\";\r\nexport const GET_SEASONS = \"GET_SEASONS\";\r\nexport const GET_REPAYMENTS = \"GET_REPAYMENTS\";\r\nexport const GET_TOTAL_REPAYMENT_UPLOADS = \"GET_TOTAL_REPAYMENTS\";\r\nexport const CUSTOMER_ERROR = \"CUSTOMER_ERROR\";\r\nexport const SEASON_ERROR = \"SEASON_ERROR\";\r\nexport const REPAYMENT_ERROR = \"REPAYMENT_ERROR\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const CLEAR_PROPOSED_CHANGES = \"CLEAR_PROPOSED_CHANGES\";\r\nexport const CLEAR_PANEL = \"CLEAR_PANEL\";\r\n","import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport SeasonContext from \"./seasonContext\";\r\nimport seasonReducer from \"./seasonReducer\";\r\nimport {\r\n  SEASON_ERROR,\r\n  GET_SEASONS,\r\n} from \"../types\";\r\n\r\nconst SeasonState = (props) => {\r\n  const initialState = {\r\n    seasons: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(seasonReducer, initialState);\r\n\r\n  const getSeasons = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/seasons\");\r\n      dispatch({\r\n        type: GET_SEASONS,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SEASON_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <SeasonContext.Provider\r\n      value={{\r\n        seasons: state.seasons,\r\n        error: state.error,\r\n        getSeasons\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SeasonContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SeasonState;\r\n","import { createContext } from 'react';\r\n\r\nconst customerContext = createContext();\r\n\r\nexport default customerContext;","import {\r\n  GET_CUSTOMERS,\r\n  FIND_CUSTOMER,\r\n  CUSTOMER_ERROR,\r\n  SET_LOADING,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case FIND_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        fetchedCustomers: action.payload,\r\n        loading: false\r\n      }\r\n    case GET_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: action.payload,\r\n        loading: false\r\n      }\r\n    case CUSTOMER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport CustomerContext from './customerContext';\r\nimport customerReducer from './customerReducer';\r\nimport { GET_CUSTOMERS, FIND_CUSTOMER, CUSTOMER_ERROR, SET_LOADING } from \"../types\";\r\n\r\nconst CustomerState = props => {\r\n  const initialState = {\r\n    customers: null,\r\n    fetchedCustomers: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(customerReducer, initialState);\r\n\r\n  const getAllCustomers = async () => {\r\n    setLoading();\r\n    try {\r\n      const res = await axios.get('/api/v1/customers/');\r\n      dispatch({\r\n        type: GET_CUSTOMERS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CUSTOMER_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  }\r\n\r\n  const findCustomer = async value => {\r\n    setLoading();\r\n    try {\r\n      const res = await axios.get(`/api/v1/customers/?q=${value}`);\r\n      dispatch({\r\n        type: FIND_CUSTOMER,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CUSTOMER_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  }\r\n\r\n  // Set Loading\r\n  const setLoading = () => dispatch({type: SET_LOADING});\r\n\r\n  return (\r\n    <CustomerContext.Provider\r\n      value={{\r\n        customers: state.customers,\r\n        fetchedCustomers: state.fetchedCustomers,\r\n        error: state.error,\r\n        findCustomer,\r\n        getAllCustomers\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CustomerContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CustomerState\r\n\r\n\r\n","import {\r\n  GET_CUSTOMER_SUMMARY,\r\n  ADD_TO_UPLOADS,\r\n  GET_REPAYMENTS,\r\n  REPAYMENT_ERROR,\r\n  REPAY_DEBTS,\r\n  CLEAR_PROPOSED_CHANGES,\r\n  SET_LOADING,\r\n  CLEAR_PANEL\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CUSTOMER_SUMMARY:\r\n      return {\r\n        ...state,\r\n        summariesToModify: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROPOSED_CHANGES:\r\n      return {\r\n        ...state,\r\n        summariesToModify: null,\r\n      };\r\n    case ADD_TO_UPLOADS:\r\n      return {\r\n        ...state,\r\n        repaymentUploads: [action.payload, ...state.repaymentUploads],\r\n      };\r\n    case GET_REPAYMENTS:\r\n      return {\r\n        ...state,\r\n        allRepayments: action.payload,\r\n      };\r\n    case REPAY_DEBTS:\r\n      return {\r\n        ...state,\r\n        currentlyMadeRepayments: action.payload,\r\n      };\r\n    case REPAYMENT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n        case CLEAR_PANEL:\r\n        return {\r\n          ...state,\r\n          repaymentUploads: [],\r\n          currentlyMadeRepayments: null\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport repaymentReducer from \"./repaymentReducer\";\r\nimport RepaymentContext from \"./repaymentContext\";\r\nimport {\r\n  GET_CUSTOMER_SUMMARY,\r\n  ADD_TO_UPLOADS,\r\n  GET_REPAYMENTS,\r\n  REPAYMENT_ERROR,\r\n  REPAY_DEBTS,\r\n  GET_TOTAL_REPAYMENT_UPLOADS,\r\n  CLEAR_PROPOSED_CHANGES,\r\n  SET_LOADING,\r\n  CLEAR_PANEL\r\n} from \"../types\";\r\n\r\nconst RepaymentState = (props) => {\r\n  const initialState = {\r\n    summariesToModify: null,\r\n    repaymentUploads: [],\r\n    currentlyMadeRepayments: null,\r\n    allRepayments: null,\r\n    totalRepaymentUploads: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(repaymentReducer, initialState);\r\n\r\n  const getAllRepayments = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/repayments\");\r\n      dispatch({\r\n        type: GET_REPAYMENTS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REPAYMENT_ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const repayDebts = async (uploads) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/v1/repayments/repay\", uploads, config);\r\n      dispatch({\r\n        type: REPAY_DEBTS,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REPAYMENT_ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTotalRepaymentUploads = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/repayments/uploads\");\r\n      dispatch({\r\n        type: GET_TOTAL_REPAYMENT_UPLOADS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REPAYMENT_ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getSummariesToModify = async (customerId, seasonId, amount) => {\r\n    setLoading();\r\n    try {\r\n      const res = await axios.get(\r\n        `/api/v1/repayments//proposed-changes?customerId=${customerId}&amount=${amount}&seasonId=${seasonId}`\r\n      );\r\n      dispatch({\r\n        type: GET_CUSTOMER_SUMMARY,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REPAYMENT_ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearProposedChanges = () => {\r\n    dispatch({\r\n      type: CLEAR_PROPOSED_CHANGES,\r\n    });\r\n  };\r\n\r\n  const addToUploads = (upload) => {\r\n    dispatch({\r\n      type: ADD_TO_UPLOADS,\r\n      payload: upload,\r\n    });\r\n    clearProposedChanges();\r\n  };\r\n\r\n  const setLoading = () => {\r\n    dispatch({\r\n      type: SET_LOADING,\r\n    });\r\n  };\r\n\r\n  const clearPanel = () => {\r\n    dispatch({\r\n      type: CLEAR_PANEL\r\n    })\r\n  }\r\n\r\n  return (\r\n    <RepaymentContext.Provider\r\n      value={{\r\n        repaymentUploads: state.repaymentUploads,\r\n        summariesToModify: state.summariesToModify,\r\n        currentlyMadeRepayments: state.currentlyMadeRepayments,\r\n        allRepayments: state.allRepayments,\r\n        totalRepaymentUploads: state.totalRepaymentUploads,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        repayDebts,\r\n        getAllRepayments,\r\n        addToUploads,\r\n        getSummariesToModify,\r\n        getTotalRepaymentUploads,\r\n        clearProposedChanges,\r\n        clearPanel\r\n      }}\r\n    >\r\n      {props.children}\r\n    </RepaymentContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RepaymentState;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport NotFound from \"./components/pages/NotFound\";\nimport About from \"./components/pages/About\";\nimport Home from \"./components/pages/Home\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport SeasonState from \"./context/season/SeasonState\";\nimport CustomerState from \"./context/customer/CustomerState\";\nimport RepaymentState from \"./context/repayment/RepaymentState\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <SeasonState>\n      <CustomerState>\n        <RepaymentState>\n          <Router>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/dashboard\" component={Dashboard}></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route component={NotFound} />\n            </Switch>\n          </Router>\n        </RepaymentState>\n      </CustomerState>\n    </SeasonState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}